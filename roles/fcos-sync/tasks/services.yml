- name:    "create config file for external sync"
  template:
    src:   "{{ item | basename }}.jinja2"
    dest:  "{{ item }}"
    owner: root
    group: root
    mode:  0644
  loop:
  - "/etc/systemd/system/fcos-sync-external.service"
  - "/etc/systemd/system/fcos-sync-external.timer"
  register: fcos_external
  when: 
  -  inventory_hostname == ansible_play_hosts_all[0]

- name: Remove files for services if they exist on the other hosts
  ansible.builtin.file:
    path: "/usr/local/bin/{{ item|basename }}"
    state: absent
  loop:
  - "/etc/systemd/system/fcos-sync-external.service"
  - "/etc/systemd/system/fcos-sync-external.timer"
  when:
  -  inventory_hostname != ansible_play_hosts_all[0]

- name: "restart fcos-sync-external service"
  service:
    name:  fcos-sync-external.service
    daemon_reload: true
    state: restarted
  when: 
  -  inventory_hostname == ansible_play_hosts_all[0]
  -  fcos_external.changed

- name:    "create config file for local sync"
  template:
    src:   "{{ item | basename }}.jinja2"
    dest:  "{{ item }}"
    owner: root
    group: root
    mode:  0644
  loop:
  - "/etc/systemd/system/fcos-sync-local.service"
  - "/etc/systemd/system/fcos-sync-local.timer"
  register: fcos_local

- name: "restart fcos-sync-local service"
  service:
    name:  fcos-sync-local.service
    state: restarted
    daemon_reload: true
  when:    fcos_local.changed

- name: Enable and Start fcos-sync-local.timer
  ansible.builtin.systemd:
    name:    fcos-sync-local.timer
    state:   started
    daemon_reload: yes
    enabled: yes

- name: Enable and Start fcos-sync-external.timer
  ansible.builtin.systemd:
    name:    fcos-sync-external.timer
    state:   started
    enabled: yes
  when:
  -  inventory_hostname == ansible_play_hosts_all[0]

