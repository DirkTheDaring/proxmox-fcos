from ansible.plugins.action import ActionBase

# ActionMoudle will be instiated per host 

class ActionModule(ActionBase):

     def validate(self, task_vars, result):
         ansible_play_hosts_all = task_vars['ansible_play_hosts_all'] 
         hostvars = task_vars['hostvars']
         for inventory_hostname in ansible_play_hosts_all:
             host = hostvars[inventory_hostname]
             for attr in [ 'kvm_host', 'kvm_id']:
                 if attr not in host:
                     result['changed'] = False
                     result['failed'] = True
                     result['msg'] = ""+inventory_hostname+": mandatory attribute missing: "+ attr
                     return result

         result['changed'] = False
         result['failed'] = False
         #result['msg'] = "virtual_host does"
         return result

     def run(self, tmp=None, task_vars=None):
         if task_vars is None:
            task_vars = dict()

         result = super(ActionModule, self).run(tmp, task_vars)
         inventory_hostname = task_vars['inventory_hostname']
         ansible_play_hosts_all = task_vars['ansible_play_hosts_all'] 
         if ansible_play_hosts_all[0] == inventory_hostname:
            return  self.validate(task_vars, result)
 
         # put validation code here... you can for example use
         # all this host variables in task_vars, and for example
         # compare with task_vars['hostvars'], which contains all
         # variables of all hosts
         #
         # if something is wrong, raise an error as follows:
         # result['failed'] = True
         # result['msg'] = 'Duplicate IP found: ...'    return result
         result['changed'] = False
         result['failed'] = False 
         return result
